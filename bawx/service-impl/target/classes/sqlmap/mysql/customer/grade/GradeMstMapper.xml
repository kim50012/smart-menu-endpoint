<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.basoft.service.dao.customer.grade.GradeMstMapper" >
  <resultMap id="BaseResultMap" type="com.basoft.service.entity.customer.grade.GradeMst" >
    <id column="SHOP_ID" property="shopId" jdbcType="BIGINT" />
    <id column="GRADE_ID" property="gradeId" jdbcType="BIGINT" />
    <result column="GRADE_NM" property="gradeNm" jdbcType="VARCHAR" />
    <result column="BASE_QTY" property="baseQty" jdbcType="INTEGER" />
    <result column="BASE_PRICE" property="basePrice" jdbcType="DECIMAL" />
    <result column="IS_USE" property="isUse" jdbcType="TINYINT" />
    <result column="MODIFIED_DT" property="modifiedDt" jdbcType="TIMESTAMP" />
    <result column="CREATED_DT" property="createdDt" jdbcType="TIMESTAMP" />
    <result column="MODIFIED_ID" property="modifiedId" jdbcType="VARCHAR" />
    <result column="CREATED_ID" property="createdId" jdbcType="VARCHAR" />
    <result column="EV_CYCLE" property="evCycle" jdbcType="INTEGER" />
    <result column="EXTENDED" property="extended" jdbcType="INTEGER" />
    <result column="BUY_POINT" property="buyPoint" jdbcType="INTEGER" />
    <result column="SELL_FOR_CASH" property="sellForCash" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SHOP_ID, GRADE_ID, GRADE_NM, BASE_QTY, BASE_PRICE, IS_USE, MODIFIED_DT, CREATED_DT, 
    MODIFIED_ID, CREATED_ID, EV_CYCLE, EXTENDED, BUY_POINT, SELL_FOR_CASH
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.basoft.service.entity.customer.grade.GradeMstExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from grade_mst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.basoft.service.entity.customer.grade.GradeMstKey" >
    select 
    <include refid="Base_Column_List" />
    from grade_mst
    where SHOP_ID = #{shopId,jdbcType=BIGINT}
      and GRADE_ID = #{gradeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.basoft.service.entity.customer.grade.GradeMstKey" >
    delete from grade_mst
    where SHOP_ID = #{shopId,jdbcType=BIGINT}
      and GRADE_ID = #{gradeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.basoft.service.entity.customer.grade.GradeMstExample" >
    delete from grade_mst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.basoft.service.entity.customer.grade.GradeMst" >
    insert into grade_mst (SHOP_ID, GRADE_ID, GRADE_NM, 
      BASE_QTY, BASE_PRICE, IS_USE, 
      MODIFIED_DT, CREATED_DT, MODIFIED_ID, 
      CREATED_ID, EV_CYCLE, EXTENDED, 
      BUY_POINT, SELL_FOR_CASH)
    values (#{shopId,jdbcType=BIGINT}, #{gradeId,jdbcType=BIGINT}, #{gradeNm,jdbcType=VARCHAR}, 
      #{baseQty,jdbcType=INTEGER}, #{basePrice,jdbcType=DECIMAL}, #{isUse,jdbcType=TINYINT}, 
      #{modifiedDt,jdbcType=TIMESTAMP}, #{createdDt,jdbcType=TIMESTAMP}, #{modifiedId,jdbcType=VARCHAR}, 
      #{createdId,jdbcType=VARCHAR}, #{evCycle,jdbcType=INTEGER}, #{extended,jdbcType=INTEGER}, 
      #{buyPoint,jdbcType=INTEGER}, #{sellForCash,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.basoft.service.entity.customer.grade.GradeMst" >
    insert into grade_mst
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        SHOP_ID,
      </if>
      <if test="gradeId != null" >
        GRADE_ID,
      </if>
      <if test="gradeNm != null" >
        GRADE_NM,
      </if>
      <if test="baseQty != null" >
        BASE_QTY,
      </if>
      <if test="basePrice != null" >
        BASE_PRICE,
      </if>
      <if test="isUse != null" >
        IS_USE,
      </if>
      <if test="modifiedDt != null" >
        MODIFIED_DT,
      </if>
      <if test="createdDt != null" >
        CREATED_DT,
      </if>
      <if test="modifiedId != null" >
        MODIFIED_ID,
      </if>
      <if test="createdId != null" >
        CREATED_ID,
      </if>
      <if test="evCycle != null" >
        EV_CYCLE,
      </if>
      <if test="extended != null" >
        EXTENDED,
      </if>
      <if test="buyPoint != null" >
        BUY_POINT,
      </if>
      <if test="sellForCash != null" >
        SELL_FOR_CASH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="gradeNm != null" >
        #{gradeNm,jdbcType=VARCHAR},
      </if>
      <if test="baseQty != null" >
        #{baseQty,jdbcType=INTEGER},
      </if>
      <if test="basePrice != null" >
        #{basePrice,jdbcType=DECIMAL},
      </if>
      <if test="isUse != null" >
        #{isUse,jdbcType=TINYINT},
      </if>
      <if test="modifiedDt != null" >
        #{modifiedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdDt != null" >
        #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedId != null" >
        #{modifiedId,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null" >
        #{createdId,jdbcType=VARCHAR},
      </if>
      <if test="evCycle != null" >
        #{evCycle,jdbcType=INTEGER},
      </if>
      <if test="extended != null" >
        #{extended,jdbcType=INTEGER},
      </if>
      <if test="buyPoint != null" >
        #{buyPoint,jdbcType=INTEGER},
      </if>
      <if test="sellForCash != null" >
        #{sellForCash,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.basoft.service.entity.customer.grade.GradeMstExample" resultType="java.lang.Integer" >
    select count(*) from grade_mst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update grade_mst
    <set >
      <if test="record.shopId != null" >
        SHOP_ID = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.gradeId != null" >
        GRADE_ID = #{record.gradeId,jdbcType=BIGINT},
      </if>
      <if test="record.gradeNm != null" >
        GRADE_NM = #{record.gradeNm,jdbcType=VARCHAR},
      </if>
      <if test="record.baseQty != null" >
        BASE_QTY = #{record.baseQty,jdbcType=INTEGER},
      </if>
      <if test="record.basePrice != null" >
        BASE_PRICE = #{record.basePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.isUse != null" >
        IS_USE = #{record.isUse,jdbcType=TINYINT},
      </if>
      <if test="record.modifiedDt != null" >
        MODIFIED_DT = #{record.modifiedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdDt != null" >
        CREATED_DT = #{record.createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedId != null" >
        MODIFIED_ID = #{record.modifiedId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdId != null" >
        CREATED_ID = #{record.createdId,jdbcType=VARCHAR},
      </if>
      <if test="record.evCycle != null" >
        EV_CYCLE = #{record.evCycle,jdbcType=INTEGER},
      </if>
      <if test="record.extended != null" >
        EXTENDED = #{record.extended,jdbcType=INTEGER},
      </if>
      <if test="record.buyPoint != null" >
        BUY_POINT = #{record.buyPoint,jdbcType=INTEGER},
      </if>
      <if test="record.sellForCash != null" >
        SELL_FOR_CASH = #{record.sellForCash,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update grade_mst
    set SHOP_ID = #{record.shopId,jdbcType=BIGINT},
      GRADE_ID = #{record.gradeId,jdbcType=BIGINT},
      GRADE_NM = #{record.gradeNm,jdbcType=VARCHAR},
      BASE_QTY = #{record.baseQty,jdbcType=INTEGER},
      BASE_PRICE = #{record.basePrice,jdbcType=DECIMAL},
      IS_USE = #{record.isUse,jdbcType=TINYINT},
      MODIFIED_DT = #{record.modifiedDt,jdbcType=TIMESTAMP},
      CREATED_DT = #{record.createdDt,jdbcType=TIMESTAMP},
      MODIFIED_ID = #{record.modifiedId,jdbcType=VARCHAR},
      CREATED_ID = #{record.createdId,jdbcType=VARCHAR},
      EV_CYCLE = #{record.evCycle,jdbcType=INTEGER},
      EXTENDED = #{record.extended,jdbcType=INTEGER},
      BUY_POINT = #{record.buyPoint,jdbcType=INTEGER},
      SELL_FOR_CASH = #{record.sellForCash,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.basoft.service.entity.customer.grade.GradeMst" >
    update grade_mst
    <set >
      <if test="gradeNm != null" >
        GRADE_NM = #{gradeNm,jdbcType=VARCHAR},
      </if>
      <if test="baseQty != null" >
        BASE_QTY = #{baseQty,jdbcType=INTEGER},
      </if>
      <if test="basePrice != null" >
        BASE_PRICE = #{basePrice,jdbcType=DECIMAL},
      </if>
      <if test="isUse != null" >
        IS_USE = #{isUse,jdbcType=TINYINT},
      </if>
      <if test="modifiedDt != null" >
        MODIFIED_DT = #{modifiedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdDt != null" >
        CREATED_DT = #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedId != null" >
        MODIFIED_ID = #{modifiedId,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null" >
        CREATED_ID = #{createdId,jdbcType=VARCHAR},
      </if>
      <if test="evCycle != null" >
        EV_CYCLE = #{evCycle,jdbcType=INTEGER},
      </if>
      <if test="extended != null" >
        EXTENDED = #{extended,jdbcType=INTEGER},
      </if>
      <if test="buyPoint != null" >
        BUY_POINT = #{buyPoint,jdbcType=INTEGER},
      </if>
      <if test="sellForCash != null" >
        SELL_FOR_CASH = #{sellForCash,jdbcType=INTEGER},
      </if>
    </set>
    where SHOP_ID = #{shopId,jdbcType=BIGINT}
      and GRADE_ID = #{gradeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.basoft.service.entity.customer.grade.GradeMst" >
    update grade_mst
    set GRADE_NM = #{gradeNm,jdbcType=VARCHAR},
      BASE_QTY = #{baseQty,jdbcType=INTEGER},
      BASE_PRICE = #{basePrice,jdbcType=DECIMAL},
      IS_USE = #{isUse,jdbcType=TINYINT},
      MODIFIED_DT = #{modifiedDt,jdbcType=TIMESTAMP},
      CREATED_DT = #{createdDt,jdbcType=TIMESTAMP},
      MODIFIED_ID = #{modifiedId,jdbcType=VARCHAR},
      CREATED_ID = #{createdId,jdbcType=VARCHAR},
      EV_CYCLE = #{evCycle,jdbcType=INTEGER},
      EXTENDED = #{extended,jdbcType=INTEGER},
      BUY_POINT = #{buyPoint,jdbcType=INTEGER},
      SELL_FOR_CASH = #{sellForCash,jdbcType=INTEGER}
    where SHOP_ID = #{shopId,jdbcType=BIGINT}
      and GRADE_ID = #{gradeId,jdbcType=BIGINT}
  </update>
</mapper>