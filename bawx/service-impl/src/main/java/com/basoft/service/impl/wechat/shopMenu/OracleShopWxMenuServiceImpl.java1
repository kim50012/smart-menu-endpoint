package com.basoft.service.impl.wechat.shopMenu;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.basoft.core.ware.wechat.domain.menu.Button;
import com.basoft.core.ware.wechat.domain.menu.ClickButton;
import com.basoft.core.ware.wechat.domain.menu.ComplexButton;
import com.basoft.core.ware.wechat.domain.menu.Menu;
import com.basoft.core.ware.wechat.domain.menu.ViewButton;
import com.basoft.core.ware.wechat.exception.WeixinErrorException;
import com.basoft.core.ware.wechat.util.Oauth2Utils;
import com.basoft.core.ware.wechat.util.WeixinMenuUtils;
import com.basoft.service.dao.wechat.appinfo.AppInfoMapper;
import com.basoft.service.dao.wechat.shopMenu.OracleShopWxMenuMapper;
import com.basoft.service.definition.wechat.common.WechatService;
import com.basoft.service.definition.wechat.shopMenu.OracleShopMenuWxService;
import com.basoft.service.dto.wechat.shopMenu.ShopWxMenuDto;
import com.basoft.service.entity.menu.MenuMst;
import com.basoft.service.entity.wechat.appinfo.AppInfo;

import oracle.jdbc.OracleTypes;

/**
 * 特异化service for oracle db
 * 因为调用oracle的返回游标的存储过程而导致和mysql service完全差异化
 * 
 * @Date Created in 2018/7/4
 */
@Service("oracleShopWxMenuServiceImpl")
public class OracleShopWxMenuServiceImpl implements OracleShopMenuWxService{
    @Autowired
    private OracleShopWxMenuMapper oracleShopWxMenuMapper;
    
	@Autowired
	private AppInfoMapper appInfoMapper;
	
	@Autowired
	private WechatService wechatService;

	/**
	 * 检验菜单设置是否符合上传发布规则
	 * 
	 * @param shopId
	 * @return
	 */
	public boolean checkMenu(Long shopId) {
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("shopId", shopId);
		param.put("checkMenus",OracleTypes.CURSOR);
		List<MenuMst> reList = oracleShopWxMenuMapper.checkMenu(param);
		if (reList.isEmpty()) {
			return true;
		} else {
			return false;
		}
	}
	
	/**
	 * 发布菜单留档并进行发布
	 * 
	 * @param shopId
	 * @return
	 */
	public Long publishMenu(Long shopId) {
		// 对发布的菜单留档
		Map<String, Long> iMap = new HashMap<String, Long>();
		iMap.put("shopId", shopId);
		oracleShopWxMenuMapper.insertPublisMenuWithCount(iMap);
		Long insertCount = (Long) iMap.get("insertCount");
		
		// 发布菜单到微信平台
		if (insertCount > 0) {
			Long uploadCount = uploadMenus(shopId);
			return uploadCount;
		}
		return insertCount;
	}
	
	/**
	 * 发布微信菜单到微信服务器
	 * 
	 * @param shopId
	 */
	private Long uploadMenus(Long shopId) {
		AppInfo appInfo = appInfoMapper.selectAppInfoByShopId(shopId);
		if (appInfo == null) {
			throw new WeixinErrorException("该商店没有权限发布菜单!");
		}
		
		Map<String, Object> param1 = new HashMap<String, Object>();
		param1.put("shopId", shopId);
		param1.put("menuId", null);
		param1.put("selectMenus",OracleTypes.CURSOR);
		List<ShopWxMenuDto> list = oracleShopWxMenuMapper.selectMenuLevel1(param1);
		list = (List<ShopWxMenuDto>) param1.get("selectMenus");
		List<Button> buttonList = new ArrayList<Button>();
		for (ShopWxMenuDto map : list) {
			Long menuId = map.getMenuId();
			String menuName = map.getMenuNm();
			String eventKey = map.getMenuOpWxId();
			String url = map.getMenuOpCom();
			String isLeaf = map.getIsLeaf();
			String menuType = map.getMenuOpType();

			if ("Y".equals(isLeaf)) {
				if ("click".equals(menuType)) {
					ClickButton btn = new ClickButton();
					btn.setName(menuName);
					btn.setType(menuType);
					btn.setKey(eventKey + "");

					buttonList.add(btn);
				}else if ("scancode_push".equals(menuType)) {
					ClickButton btn = new ClickButton();
					btn.setName(menuName);
					btn.setType(menuType);
					btn.setKey(eventKey + "");

					buttonList.add(btn);
				}else if ("scancode_waitmsg".equals(menuType)) {
					ClickButton btn = new ClickButton();
					btn.setName(menuName);
					btn.setType(menuType);
					btn.setKey(eventKey + "");

					buttonList.add(btn);
				}else if ("view".equals(menuType)) {
					ViewButton btn = new ViewButton();
					btn.setName(menuName);
					btn.setType(menuType);
					if (whetherMakeOauth2Url(appInfo, url)) {
						com.basoft.core.ware.wechat.domain.AppInfo ai = new com.basoft.core.ware.wechat.domain.AppInfo();
						try {
							BeanUtils.copyProperties(ai, appInfo);
						} catch (IllegalAccessException | InvocationTargetException e) {
							e.printStackTrace();
						}
						btn.setUrl(Oauth2Utils.getMenuIinkUrlNew(ai, menuId));
					} else {
						btn.setUrl(url);
					}
					buttonList.add(btn);
				}
			} else {
				ComplexButton cbtn = new ComplexButton();
				cbtn.setName(menuName);
				// cbtn.setSub_button(new Button[] { btn11, btn12, btn13, btn14, btn15});

				List<Button> subBtns = new ArrayList<Button>();
				
				Map<String, Object> param2 = new HashMap<String, Object>();
				param2.put("shopId", shopId);
				param2.put("menuId", menuId);
				param2.put("selectMenus",OracleTypes.CURSOR);
				List<ShopWxMenuDto> sublist = oracleShopWxMenuMapper.selectMenuLevel2(param2);
				sublist = (List<ShopWxMenuDto>) param2.get("selectMenus");
				for (ShopWxMenuDto item : sublist) {
					Long menuId2 = item.getMenuId();
					String menuName2 = item.getMenuNm();
					String eventKey2 = item.getMenuOpWxId();
					String url2 = item.getMenuOpCom();
					String menuType2 = item.getMenuOpType();

					if ("click".equals(menuType2)) {
						ClickButton btn = new ClickButton();
						btn.setType(menuType2);
						btn.setName(menuName2);
						btn.setKey(eventKey2 + "");
						
						// 消息类型 1-图文 2-图片 3-文本
						Integer menuType3 = (Integer) item.getMenuMsgType();
						// 微信端media id:图文或图频的id
						String eventKey3 = item.getMenuOpWxId();
						if(menuType3 == 1) {
							btn.setKey(eventKey3);
						} else if(menuType3 == 2) {
							btn.setKey(eventKey3);
						} else if(menuType3 == 3) {
							btn.setKey(url2);
						}

						subBtns.add(btn);
					}else if ("scancode_push".equals(menuType2)) {
						ClickButton btn = new ClickButton();
						btn.setType(menuType2);
						btn.setName(menuName2);
						btn.setKey(eventKey2 + "");

						subBtns.add(btn);
					}else if ("scancode_waitmsg".equals(menuType2)) {
						ClickButton btn = new ClickButton();
						btn.setType(menuType2);
						btn.setName(menuName2);
						btn.setKey(eventKey2 + "");

						subBtns.add(btn);
					}else if ("view".equals(menuType2)) {
						ViewButton btn = new ViewButton();
						btn.setType(menuType2);
						btn.setName(menuName2);
						if (whetherMakeOauth2Url(appInfo, url2)) {
							com.basoft.core.ware.wechat.domain.AppInfo ai = new com.basoft.core.ware.wechat.domain.AppInfo();
							try {
								BeanUtils.copyProperties(ai, appInfo);
							} catch (IllegalAccessException | InvocationTargetException e) {
								e.printStackTrace();
							}
							btn.setUrl(Oauth2Utils.getMenuIinkUrlNew(ai, menuId2));
						} else {
							btn.setUrl(url2);
						}
						subBtns.add(btn);
					}
				}
				cbtn.setSub_button((Button[]) subBtns.toArray(new Button[subBtns.size()]));
				buttonList.add(cbtn);
			}
		}

		Menu menu = new Menu();
		menu.setButton((Button[]) buttonList.toArray(new Button[buttonList.size()]));
	 
		String token = wechatService.getAccessToken(appInfo);
		WeixinMenuUtils.createMenu(token, menu);
		return new Long(buttonList.size());
	}
	
	private boolean whetherMakeOauth2Url(AppInfo appInfo, String url) {
		if (StringUtils.isNotBlank(url) && (url.startsWith("/") || url.startsWith(appInfo.getUrl()) && !url.endsWith(".html"))) {
			return true;
		}
		return false;
	}
}
