<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.basoft</groupId>
		<artifactId>bawx</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>web-sys</artifactId>
	<packaging>jar</packaging>
	<name>web system</name>
	<description>basoft weixin web system</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<dependencies>
		<!--<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>1.8.12.RELEASE</version>
		</dependency>-->

		<dependency>
			<groupId>com.basoft</groupId>
			<artifactId>bacore</artifactId>
		</dependency>

		<!--<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.9.0</version>
		</dependency>-->

		<dependency>
			<groupId>com.basoft</groupId>
			<artifactId>service-definition</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.basoft</groupId>
			<artifactId>service-impl</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>8.5.27</version>
		</dependency>


        <!-- 不放置在父Module中了 start -->
        <!-- 集成srping security-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>spring-boot-starter</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
		    <groupId>com.auth0</groupId>
		    <artifactId>java-jwt</artifactId>
		    <version>3.3.0</version>
		</dependency>
		<!-- 不放置在父Module中了 end -->

		<!-- 支持亚马逊云文件服务 start-->
		<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>1.11.475</version>
		</dependency>
		<!-- 支持亚马逊云文件服务 end-->
    </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>1.16.8.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/lib</outputDirectory>
					<excludeTransitive>false</excludeTransitive> <!-- 表示是否不包含间接依赖的包 -->
					<stripVersion>false</stripVersion> <!-- 去除版本信息 -->
				</configuration>

				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- 拷贝项目依赖包到lib/目录下 -->
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<excludeTransitive>false</excludeTransitive>
							<stripVersion>false</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 项目资源插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<!-- 拷贝项目src/main/resources/下，除.bat以外的所有文件到conf/目录下 -->
							<outputDirectory>${project.build.directory}/</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>*.bat</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-command</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<!-- 只拷贝项目src/main/resources/目录下的.sh文件到输出目录下 -->
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>true</filtering>
									<includes>
										<include>*.sh</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<!-- 生成MANIFEST.MF的设置 -->
						<manifest>
							<!-- 为依赖包添加路径, 这些路径会写在MANIFEST文件的Class-Path下 -->
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<!-- jar启动入口类-->
							<mainClass>com.basoft.api.BAAwsSoftWechatApplication</mainClass>
						</manifest>
						<manifestEntries>
							<!-- 在Class-Path下添加配置文件的路径 -->
							<Class-Path>/</Class-Path>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
					<includes>
						<!-- 打jar包时，只打包class文件 -->
						<include>**/*.class</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>